/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip,
} = require("./runtime/index-browser.js");

const Prisma = {};

exports.Prisma = Prisma;
exports.$Enums = {};

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c",
};

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.Decimal = Decimal;

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.validator = Public.validator;

/**
 * Extensions
 */
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
};

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull;
Prisma.JsonNull = objectEnumValues.instances.JsonNull;
Prisma.AnyNull = objectEnumValues.instances.AnyNull;

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull,
};

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: "ReadUncommitted",
  ReadCommitted: "ReadCommitted",
  RepeatableRead: "RepeatableRead",
  Serializable: "Serializable",
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: "id",
  nomeCompleto: "nomeCompleto",
  email: "email",
  senha: "senha",
  genero: "genero",
  dataNascimento: "dataNascimento",
  perfil: "perfil",
  organizacao: "organizacao",
  tentativasLogin: "tentativasLogin",
  tentativasExclusao: "tentativasExclusao",
  bloqueadoAte: "bloqueadoAte",
  tokenRedefinirSenha: "tokenRedefinirSenha",
  expiraRedefinirSenha: "expiraRedefinirSenha",
};

exports.Prisma.ProjetoScalarFieldEnum = {
  id: "id",
  nomeProjeto: "nomeProjeto",
  descricao: "descricao",
  criadorId: "criadorId",
  status: "status",
};

exports.Prisma.BrainstormingScalarFieldEnum = {
  id: "id",
  criadorId: "criadorId",
  titulo: "titulo",
  projetoRelacionado: "projetoRelacionado",
  data: "data",
  horario: "horario",
  historiasUsuario: "historiasUsuario",
};

exports.Prisma.ProjetoUsuarioScalarFieldEnum = {
  id: "id",
  projetoId: "projetoId",
  membroId: "membroId",
  nomeMembro: "nomeMembro",
  emailMembro: "emailMembro",
  papelNoProjeto: "papelNoProjeto",
};

exports.Prisma.BrainstormingProjetoScalarFieldEnum = {
  projetoId: "projetoId",
  brainstormingId: "brainstormingId",
};

exports.Prisma.SortOrder = {
  asc: "asc",
  desc: "desc",
};

exports.Prisma.NullsOrder = {
  first: "first",
  last: "last",
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  id: "id",
  nomeCompleto: "nomeCompleto",
  email: "email",
  senha: "senha",
  dataNascimento: "dataNascimento",
  organizacao: "organizacao",
  tokenRedefinirSenha: "tokenRedefinirSenha",
};

exports.Prisma.ProjetoOrderByRelevanceFieldEnum = {
  id: "id",
  nomeProjeto: "nomeProjeto",
  descricao: "descricao",
  criadorId: "criadorId",
};

exports.Prisma.BrainstormingOrderByRelevanceFieldEnum = {
  id: "id",
  criadorId: "criadorId",
  titulo: "titulo",
  projetoRelacionado: "projetoRelacionado",
  data: "data",
  horario: "horario",
  historiasUsuario: "historiasUsuario",
};

exports.Prisma.ProjetoUsuarioOrderByRelevanceFieldEnum = {
  id: "id",
  projetoId: "projetoId",
  membroId: "membroId",
  nomeMembro: "nomeMembro",
  emailMembro: "emailMembro",
};

exports.Prisma.BrainstormingProjetoOrderByRelevanceFieldEnum = {
  projetoId: "projetoId",
  brainstormingId: "brainstormingId",
};
exports.Genero = exports.$Enums.Genero = {
  FEMININO: "FEMININO",
  MASCULINO: "MASCULINO",
  NAO_BINARIO: "NAO_BINARIO",
  PREFERE_NAO_INFORMAR: "PREFERE_NAO_INFORMAR",
};

exports.Perfil = exports.$Enums.Perfil = {
  ESTUDANTE_GRADUACAO: "ESTUDANTE_GRADUACAO",
  ESTUDANTE_POS_GRADUACAO: "ESTUDANTE_POS_GRADUACAO",
  PROFESSOR: "PROFESSOR",
  PROFISSIONAL_INDUSTRIA: "PROFISSIONAL_INDUSTRIA",
};

exports.StatusProjeto = exports.$Enums.StatusProjeto = {
  NOVO: "NOVO",
  DELETADO: "DELETADO",
  ANTIGO: "ANTIGO",
};

exports.PapelProjeto = exports.$Enums.PapelProjeto = {
  MODERADOR: "MODERADOR",
  PARTICIPANTE: "PARTICIPANTE",
};

exports.Prisma.ModelName = {
  Usuario: "Usuario",
  Projeto: "Projeto",
  Brainstorming: "Brainstorming",
  ProjetoUsuario: "ProjetoUsuario",
  BrainstormingProjeto: "BrainstormingProjeto",
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message;
        const runtime = getRuntime();
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message =
            "PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `" +
            runtime.prettyName +
            "`).";
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`;

        throw new Error(message);
      },
    });
  }
}

exports.PrismaClient = PrismaClient;

Object.assign(exports, Prisma);
